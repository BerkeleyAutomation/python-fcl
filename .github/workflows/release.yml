name: Release To Pypi

on:
  push:
    branches:
      - master

jobs:
  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35.4.1
      - name: Tag Version
        if: contains(steps.changed-files.outputs.modified_files, 'src/fcl/version.py')
        id: set_tag
        run: |
          export VER=v$(python -c "exec(open('src/fcl/version.py','r').read());print(__version__)")
          echo echo "tag_name=${VER}" >> $GITHUB_OUTPUT
      - name: Create Release
        if: contains(steps.changed-files.outputs.modified_files, 'src/fcl/version.py')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set_tag.outputs.tag_name }}
          release_name: ${{ steps.set_tag.outputs.tag_name }}
          draft: false
          prerelease: false
    outputs:
      mod_files: ${{ steps.changed-files.outputs.modified_files }}

  build_wheels:
    if: contains(needs.create_release.outputs.mod_files, 'src/fcl/version.py')
    name: Build wheel on ${{matrix.platform}}
    runs-on: ${{matrix.platform}}
    needs: create_release
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
        env:
          CIBW_ARCHS_MACOS: 'x86_64 arm64'
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
      - uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ./wheelhouse/*.whl
          overwrite: true
          draft: false
          update_latest_release: true

  upload_pypi:
    if: contains(needs.create_release.outputs.mod_files, 'src/fcl/version.py')
    needs: [create_release, build_wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.6.4
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
